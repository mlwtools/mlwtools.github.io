{"meta":{"title":"数字技术栈","subtitle":"mlwtoolsのBlog","description":"数字技术栈 | 数字网络栈","author":"mlwtools","url":"https://mlwtools.cloudns.biz","root":"/"},"pages":[{"title":"404","date":"2019-08-10T08:41:10.000Z","updated":"2024-01-18T05:02:24.822Z","comments":true,"path":"404.html","permalink":"https://mlwtools.cloudns.biz/404.html","excerpt":"","text":""},{"title":"","date":"2024-01-18T01:48:11.088Z","updated":"2024-01-18T01:48:11.088Z","comments":true,"path":"baidu_verify_xxxxxxx.html","permalink":"https://mlwtools.cloudns.biz/baidu_verify_xxxxxxx.html","excerpt":"","text":"wvlc3L96QK"},{"title":"","date":"2024-01-18T01:48:11.090Z","updated":"2024-01-18T01:48:11.090Z","comments":true,"path":"google1xxxxxxx0.html","permalink":"https://mlwtools.cloudns.biz/google1xxxxxxx0.html","excerpt":"","text":"google-site-verification: google110e5e5e14c8dcf0.html"},{"title":"about","date":"2019-10-24T16:00:00.000Z","updated":"2024-01-18T01:48:11.087Z","comments":true,"path":"about/index.html","permalink":"https://mlwtools.cloudns.biz/about/index.html","excerpt":"","text":""},{"title":"放松一下","date":"2019-08-10T08:41:10.000Z","updated":"2024-01-18T01:48:10.859Z","comments":true,"path":"List/index.html","permalink":"https://mlwtools.cloudns.biz/List/index.html","excerpt":"","text":"影音资源共享"},{"title":"archives","date":"2019-10-24T16:00:00.000Z","updated":"2024-01-18T01:48:11.088Z","comments":true,"path":"archives/index.html","permalink":"https://mlwtools.cloudns.biz/archives/index.html","excerpt":"","text":""},{"title":"categories","date":"2019-10-24T16:00:00.000Z","updated":"2024-01-18T01:48:11.088Z","comments":true,"path":"categories/index.html","permalink":"https://mlwtools.cloudns.biz/categories/index.html","excerpt":"","text":""},{"title":"留言板","date":"2019-10-24T16:00:00.000Z","updated":"2024-01-18T06:14:44.104Z","comments":true,"path":"contact/index.html","permalink":"https://mlwtools.cloudns.biz/contact/index.html","excerpt":"","text":"畅所欲言 在这里可以留下你的足迹，欢迎在下方留言，欢迎交换友链，一起交流学习！ 友链 mlwtoolsの友链信息 博客名称: mlwtoolsの博客 博客网址: https://mlwtools.cloudns.biz 博客头像: https://mlwtools.github.io/picx-images-hosting/20240118/1705551743020.webp 博客介绍: The harder you work, the luckier you will be"},{"title":"统计","date":"2020-10-31T02:11:28.000Z","updated":"2024-01-18T01:48:11.089Z","comments":true,"path":"census/index.html","permalink":"https://mlwtools.cloudns.biz/census/index.html","excerpt":"","text":""},{"title":"资源分享","date":"2019-07-19T08:40:27.000Z","updated":"2024-01-18T05:07:35.528Z","comments":true,"path":"resource/index.html","permalink":"https://mlwtools.cloudns.biz/resource/index.html","excerpt":"","text":""},{"title":"tags","date":"2019-07-19T08:40:27.000Z","updated":"2024-01-18T01:48:11.092Z","comments":true,"path":"tags/index.html","permalink":"https://mlwtools.cloudns.biz/tags/index.html","excerpt":"","text":""},{"title":"相册","date":"2024-01-18T01:48:10.853Z","updated":"2024-01-18T01:48:10.853Z","comments":true,"path":"List/galleries/index.html","permalink":"https://mlwtools.cloudns.biz/List/galleries/index.html","excerpt":"","text":""},{"title":"友链","date":"2019-07-19T08:42:10.000Z","updated":"2024-01-18T01:48:11.090Z","comments":true,"path":"friends/index.html","permalink":"https://mlwtools.cloudns.biz/friends/index.html","excerpt":"","text":""},{"title":"听听音乐","date":"2019-07-19T08:40:27.000Z","updated":"2024-01-18T01:48:10.860Z","comments":true,"path":"List/music/index.html","permalink":"https://mlwtools.cloudns.biz/List/music/index.html","excerpt":"","text":""},{"title":"视频","date":"2019-08-10T08:41:10.000Z","updated":"2024-01-18T01:48:10.859Z","comments":true,"path":"List/movies/index.html","permalink":"https://mlwtools.cloudns.biz/List/movies/index.html","excerpt":"","text":""},{"title":"听听音乐","date":"2019-07-19T08:40:27.000Z","updated":"2024-01-18T05:42:17.216Z","comments":true,"path":"List/tools/index.html","permalink":"https://mlwtools.cloudns.biz/List/tools/index.html","excerpt":"","text":""},{"title":"二次元风","date":"2024-01-18T01:48:10.854Z","updated":"2024-01-18T01:48:10.854Z","comments":true,"path":"List/galleries/二次元风/index.html","permalink":"https://mlwtools.cloudns.biz/List/galleries/%E4%BA%8C%E6%AC%A1%E5%85%83%E9%A3%8E/index.html","excerpt":"","text":""},{"title":"动漫人物","date":"2024-01-18T01:48:10.855Z","updated":"2024-01-18T01:48:10.855Z","comments":true,"path":"List/galleries/动漫人物/index.html","permalink":"https://mlwtools.cloudns.biz/List/galleries/%E5%8A%A8%E6%BC%AB%E4%BA%BA%E7%89%A9/index.html","excerpt":"","text":""},{"title":"乖巧小狗","date":"2024-01-18T01:48:10.854Z","updated":"2024-01-18T01:48:10.854Z","comments":true,"path":"List/galleries/乖巧小狗/index.html","permalink":"https://mlwtools.cloudns.biz/List/galleries/%E4%B9%96%E5%B7%A7%E5%B0%8F%E7%8B%97/index.html","excerpt":"","text":""},{"title":"动漫风景","date":"2024-01-18T01:48:10.855Z","updated":"2024-01-18T01:48:10.855Z","comments":true,"path":"List/galleries/动漫风景/index.html","permalink":"https://mlwtools.cloudns.biz/List/galleries/%E5%8A%A8%E6%BC%AB%E9%A3%8E%E6%99%AF/index.html","excerpt":"","text":""},{"title":"动漫插画","date":"2024-01-18T01:48:10.855Z","updated":"2024-01-18T01:48:10.855Z","comments":true,"path":"List/galleries/动漫插画/index.html","permalink":"https://mlwtools.cloudns.biz/List/galleries/%E5%8A%A8%E6%BC%AB%E6%8F%92%E7%94%BB/index.html","excerpt":"","text":""},{"title":"呆萌猫咪","date":"2024-01-18T01:48:10.855Z","updated":"2024-01-18T01:48:10.855Z","comments":true,"path":"List/galleries/呆萌猫咪/index.html","permalink":"https://mlwtools.cloudns.biz/List/galleries/%E5%91%86%E8%90%8C%E7%8C%AB%E5%92%AA/index.html","excerpt":"","text":""},{"title":"城市风光","date":"2024-01-18T01:48:10.856Z","updated":"2024-01-18T01:48:10.856Z","comments":true,"path":"List/galleries/城市风光/index.html","permalink":"https://mlwtools.cloudns.biz/List/galleries/%E5%9F%8E%E5%B8%82%E9%A3%8E%E5%85%89/index.html","excerpt":"","text":""},{"title":"炫酷跑车","date":"2024-01-18T01:48:10.857Z","updated":"2024-01-18T01:48:10.857Z","comments":true,"path":"List/galleries/炫酷跑车/index.html","permalink":"https://mlwtools.cloudns.biz/List/galleries/%E7%82%AB%E9%85%B7%E8%B7%91%E8%BD%A6/index.html","excerpt":"","text":""},{"title":"清新花卉","date":"2024-01-18T01:48:10.856Z","updated":"2024-01-18T01:48:10.856Z","comments":true,"path":"List/galleries/清新花卉/index.html","permalink":"https://mlwtools.cloudns.biz/List/galleries/%E6%B8%85%E6%96%B0%E8%8A%B1%E5%8D%89/index.html","excerpt":"","text":""},{"title":"璀璨星空","date":"2024-01-18T01:48:10.857Z","updated":"2024-01-18T01:48:10.857Z","comments":true,"path":"List/galleries/璀璨星空/index.html","permalink":"https://mlwtools.cloudns.biz/List/galleries/%E7%92%80%E7%92%A8%E6%98%9F%E7%A9%BA/index.html","excerpt":"","text":""},{"title":"甜美食品","date":"2024-01-18T01:48:10.859Z","updated":"2024-01-18T01:48:10.859Z","comments":true,"path":"List/galleries/甜美食品/index.html","permalink":"https://mlwtools.cloudns.biz/List/galleries/%E7%94%9C%E7%BE%8E%E9%A3%9F%E5%93%81/index.html","excerpt":"","text":""},{"title":"自然风景","date":"2024-01-18T01:48:10.859Z","updated":"2024-01-18T01:48:10.859Z","comments":true,"path":"List/galleries/自然风景/index.html","permalink":"https://mlwtools.cloudns.biz/List/galleries/%E8%87%AA%E7%84%B6%E9%A3%8E%E6%99%AF/index.html","excerpt":"","text":""}],"posts":[{"title":"","slug":"01.研究/WordPress博客主题推荐/WordPress博客主题推荐","date":"2024-01-21T12:35:13.375Z","updated":"2024-01-21T14:38:02.588Z","comments":true,"path":"2024/01/21/01.yan-jiu/wordpress-bo-ke-zhu-ti-tui-jian/wordpress-bo-ke-zhu-ti-tui-jian/","link":"","permalink":"https://mlwtools.cloudns.biz/2024/01/21/01.yan-jiu/wordpress-bo-ke-zhu-ti-tui-jian/wordpress-bo-ke-zhu-ti-tui-jian/","excerpt":"","text":"title: WordPress博客主题推荐abbrlink:tags: VPScategories: 研究summary: WordPress博客主题推荐。img: https://mlwtools.github.io/picx-images-hosting/20240121/1705847840973.webpcover: truecoverImg: https://mlwtools.github.io/picx-images-hosting/20240121/1705847840973.webpdate: 2024-01-21 08:00:00password: cf026e86c87d58967e73f3900a6ca155cf805c868762a9ab474a791a0d0deadf WordPress博客主题推荐 https://www.bejson.com/enc/urlencode/ https://xmgseo.com/ https://xmgseo.com/wordpress模板推荐/ https://webnus.net/zh-CN/程序员最好的免费-wordpress-主题/ https://dmthought.com/best-wordpress-themes/ https://www.1deng.me/best-free-themes.html argon主题 https://github.com/solstice23/argon-theme 一键安装Wordpresscurl -s https://raw.githubusercontent.com/zhenhao-ma/instant-wordpress/main/ubuntu.sh | bash -s","categories":[],"tags":[]},{"title":"手动安装配置Hysteria2","slug":"01.研究/手动配置Hysteria2/手动配置Hysteria2","date":"2024-01-21T00:00:00.000Z","updated":"2024-01-21T06:59:45.737Z","comments":true,"path":"2024/01/21/01.yan-jiu/shou-dong-pei-zhi-hysteria2/shou-dong-pei-zhi-hysteria2/","link":"","permalink":"https://mlwtools.cloudns.biz/2024/01/21/01.yan-jiu/shou-dong-pei-zhi-hysteria2/shou-dong-pei-zhi-hysteria2/","excerpt":"","text":"手动安装配置Hysteria2安装Hysteria2bash &lt;(curl -fsSL https://get.hy2.sh/) 移除 Hysteria2bash &lt;(curl -fsSL https://get.hy2.sh/) --remove 配置服务端listen: :443 tls: cert: /cert/bing.crt key: /cert/bing.key auth: type: password password: test666 masquerade: type: proxy proxy: url: https://www.bing.com/ rewriteHost: true obfs: type: salamander salamander: password: test666 ufw allow 443 在线证书生成https://www.ssleye.com/ssltool/self_sign.html 证书/PEM格式 #your_cert.crt -----BEGIN CERTIFICATE----- MIIDPDCCAiSgAwIBAgIUGAsW7CaccL8PjYMxwITNkagO+2swDQYJKoZIhvcNAQEF BQAwNTESMBAGA1UEAwwJbWx3YWl0ZXN0MRIwEAYDVQQKDAltbHdhaXRlc3QxCzAJ BgNVBAYTAkNOMCAXDTI0MDEyMDIxMDUwMFoYDzIwNjAxMjMwMjEwNTAwWjBaMQsw CQYDVQQGEwJDTjEPMA0GA1UECAwG56aP5bu6MQ8wDQYDVQQHDAbljqbpl6gxEjAQ BgNVBAoMCW1sd2FpdGVzdDEVMBMGA1UEAwwMd3d3LmJpbmcuY29tMIIBIjANBgkq hkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAroSOIKi0ArSYPG6eJleKzfcFbD4bw+0T tT72K16eanaCQbXZ/T1fs3XGl6g7NyDRnLOBKzAX/PUqSlTXQhzrL3APMiB8CZnV EzPE2KpXNdDhejyN+d9kiOxLa7r7LdKyyaAyw0HenNCmtIW88+QvcR4ruQHZ7d5U VFa0xTpq4+YkN7cvWvE6grL6Wq2G+YDJX+X+gffWAQbgnv8/k0JjAo7hcoYPQl0O NBjujEZ79QtYShYOGjfIIh7i16G5DUxyE9NyuuAT93ZzRB7Y2BMPdhcL7b6BAzAU Cs++GBAbtUgqngtfLc8LQLzuvRj1GxwoOW8CWFJATF7A2yOBlu4OCwIDAQABox0w GzALBgNVHREEBDACggAwDAYDVR0TAQH/BAIwADANBgkqhkiG9w0BAQUFAAOCAQEA R0n53vicKXBRtswPB7ukY4kvfDhWoncLCHeuWT5x6QjRFhFXrLnbzrnaxZD/gtIT 5bDaCLZiFno4q8/ZjApa9+5p3iczAFnzpH7o3BJ3IlOo+uT8ECZluNeGMvgx2CA8 xRVB3Ji1npEQf1PczQXNYEiLZ8Rqf/QDBXp4Yj8k/Y8PDhad3wP5qvo4E2tiUvk5 SmhwSpRen+9PrUAoRN/6iJuPWv3qMmnaO6fGoddB35/j3ThuwxJT0oHsZUWYEa2T qxu5epcDD+vT5AylLsxeCI72Ffv9O2RWpRNW3wEVPHLTIHzQn/+wOHdiCWkNs7TR cW+NizGk6g8PQj2gHdQR2w== -----END CERTIFICATE----- 私钥/PEM格式 #your_key.key -----BEGIN PRIVATE KEY----- MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCuhI4gqLQCtJg8 bp4mV4rN9wVsPhvD7RO1PvYrXp5qdoJBtdn9PV+zdcaXqDs3INGcs4ErMBf89SpK VNdCHOsvcA8yIHwJmdUTM8TYqlc10OF6PI3532SI7Etruvst0rLJoDLDQd6c0Ka0 hbzz5C9xHiu5Adnt3lRUVrTFOmrj5iQ3ty9a8TqCsvparYb5gMlf5f6B99YBBuCe /z+TQmMCjuFyhg9CXQ40GO6MRnv1C1hKFg4aN8giHuLXobkNTHIT03K64BP3dnNE HtjYEw92FwvtvoEDMBQKz74YEBu1SCqeC18tzwtAvO69GPUbHCg5bwJYUkBMXsDb I4GW7g4LAgMBAAECggEAR0e9BXnijHhW9df4oJCBET8j5+I2VQAwXIcq5OvwqGtf KJeuQdEflZ01UBxWk13EP8zRpWIvahJ5A4NDqK1HIkkS69Z40zMR5JXwgM6ScFiw v8yb8MNdvM9GvunQThcRD2lvUnFFC6ftby5wzu0Us48vLJGlAZMdvpTroOMLZamd 1kvIU1Uba83EvT4Rw/f7yFvajp9j6LqtmtmDBBcY6LN+mM+zCgR+NfJrZEullHLM 45qoEXmjPtMiWPBIaXs+TrtHa+D3frhtixqCYQ30WE/N13yZbhZUgviiCNuj5RHx hNRWmRkYrdqkUwcJ41+02D3FZo9GEaZJ6BtgC/6ugQKBgQDUj64PiEBiu/DD2ClE W7mU12gab1ZkGl5Pf6FT28kPgtTHEu25yXEFO8scvsDtCVXVkXtWuHpBE5RRVffd cfXGO+4VAavdy3I5ua/ZKVOec0/PezL8SwjVNXRW5oc22MeZENaZS/eM85ylOjse niyqo9KjVuDFHKouOvkfsRzVHQKBgQDSLpmWRI+mV7t5lGSYSYZT5hDp8LfqGI5X E10F5+JTWQw0RNVGYjQHL9f7gz2LjaztxdhFa4RoEO22kxUcZK0NX69KrkJo+iIZ X4LqTWzCgoJRpbTTHZtclUUDt5no/G1g07ERWEfx6rQVDFJQf0rDl0Td+DesJLkN g85+SedPRwKBgAX2GZ2Z5qRePPxhHZcrM2M3P1YudS/NhYOZQr8FVPg4ZRtILp6d Rawt5x5hQyvirSOWNu1RsywMDobRcGgngAsVNzIjn9xSjluMF6BxhkTVWxGolN96 gz7nhuHBCV3CaqaiUEJwXPr5AhWoMmxDZ2FJwuiN0TP1/9fYE5CN+Q8JAoGAEGuT lCnHDzfLbbQqJ7uWwvc2WxBzTdadSDA7FDsJc3mBepPmFZmWdvlF5mBaboyi9fB+ 9O1xaq/n4lubSpyS6HiROURj68+e2lyb3bIuzQNlKvvHJLcrbBA9VA0D+S+/W9Eu BCzhcgTkDMDprWBEdwNaXf0GXGyCCIxDlZoweAECgYEAsETsLUBjBJ2cL0QQ05l3 a9d0vpTJwNFW4uN9lDMupngS/RC7bGZYVu846DjU3dJ+8LM2NCm3n17mQdaAAGe+ +hJgr50mV3lfNhO5Aul6fgLpNknAGUnoy1O1xtychsPu0dSCeiL0QPDClITOmFCK B9ekpyPUSMwV6mit7Khe4KA= -----END PRIVATE KEY----- 开启Hysteria2服务systemctl start hysteria-server.service systemctl status hysteria-server.service systemctl restart hysteria-server.service 设置Hysteria2开机自启systemctl enable hysteria-server.service","categories":[{"name":"研究","slug":"研究","permalink":"https://mlwtools.cloudns.biz/categories/%E7%A0%94%E7%A9%B6/"}],"tags":[{"name":"VPS","slug":"VPS","permalink":"https://mlwtools.cloudns.biz/tags/VPS/"}]},{"title":"Git的Commit常用表情","slug":"02.工具/Git安装配置教程/15.Git - Commit常用表情","date":"2024-01-18T01:00:00.000Z","updated":"2024-01-18T07:23:44.859Z","comments":true,"path":"2024/01/18/02.gong-ju/git-an-zhuang-pei-zhi-jiao-cheng/15.git-commit-chang-yong-biao-qing/","link":"","permalink":"https://mlwtools.cloudns.biz/2024/01/18/02.gong-ju/git-an-zhuang-pei-zhi-jiao-cheng/15.git-commit-chang-yong-biao-qing/","excerpt":"","text":"Git常用表情Git commit 的时候，添加表情符号可以更好的表明本次提交的性质，也更有趣。 常用表情符号如下： emoji emoji代码 commit说明 🎨 (调色板) :art: 改进代码结构/代码格式 ⚡️ (闪电) :zap: 提升性能 🐎 (赛马) :racehorse: 提升性能 🔥 (火焰) :fire: 移除代码或文件 🐛 (bug) :bug: 修复 bug 🚑 (急救车) :ambulance: 重要补丁 ✨ (火花) :sparkles: 引入新功能 📝 (铅笔) :pencil: 撰写文档 🚀 (火箭) :rocket: 部署功能 💄 (口红) :lipstick: 更新 UI 和样式文件 🎉 (庆祝) :tada: 初次提交 ✅ (白色复选框) :white_check_mark: 增加测试 🔒 (锁) :lock: 修复安全问题 🍎 (苹果) :apple: 修复 macOS 下的问题 🐧 (企鹅) :penguin: 修复 Linux 下的问题 🏁 (旗帜) :checked_flag: 修复 Windows 下的问题 🔖 (书签) :bookmark: 发行/版本标签 🚨 (警车灯) :rotating_light: 移除 linter 警告 🚧 (施工) :construction: 工作进行中 💚 (绿心) :green_heart: 修复 CI 构建问题 ⬇️ (下降箭头) :arrow_down: 降级依赖 ⬆️ (上升箭头) :arrow_up: 升级依赖 👷 (工人) :construction_worker: 添加 CI 构建系统 📈 (上升趋势图) :chart_with_upwards_trend: 添加分析或跟踪代码 🔨 (锤子) :hammer: 重大重构 ➖ (减号) :heavy_minus_sign: 减少一个依赖 🐳 (鲸鱼) :whale: Docker 相关工作 ➕ (加号) :heavy_plus_sign: 增加一个依赖 🔧 (扳手) :wrench: 修改配置文件 🌐 (地球) :globe_with_meridians: 国际化与本地化 ✏️ (铅笔) :pencil2: 修复 typo MarkDown 常用表情People 😄 :smile: 😆 :laughing: 😊 :blush: 😃 :smiley: ☺️ :relaxed: 😏 :smirk: 😍 :heart_eyes: 😘 :kissing_heart: 😚 :kissing_closed_eyes: 😳 :flushed: 😌 :relieved: 😆 :satisfied: 😁 :grin: 😉 :wink: 😜 :stuck_out_tongue_winking_eye: 😝 :stuck_out_tongue_closed_eyes: 😀 :grinning: 😗 :kissing: 😙 :kissing_smiling_eyes: 😛 :stuck_out_tongue: 😴 :sleeping: 😟 :worried: 😦 :frowning: 😧 :anguished: 😮 :open_mouth: 😬 :grimacing: 😕 :confused: 😯 :hushed: 😑 :expressionless: 😒 :unamused: 😅 :sweat_smile: 😓 :sweat: 😥 :disappointed_relieved: 😩 :weary: 😔 :pensive: 😞 :disappointed: 😖 :confounded: 😨 :fearful: 😰 :cold_sweat: 😣 :persevere: 😢 :cry: 😭 :sob: 😂 :joy: 😲 :astonished: 😱 :scream: 👿 :imp: 😫 :tired_face: 😠 :angry: 😡 :rage: 😤 :triumph: 😪 :sleepy: 😋 :yum: 😷 :mask: 😎 :sunglasses: 😵 :dizzy_face: 😈 :smiling_imp: 😐 :neutral_face: 😶 :no_mouth: 😇 :innocent: 👽 :alien: 💛 :yellow_heart: 💙 :blue_heart: 💜 :purple_heart: ❤️ :heart: 💚 :green_heart: 💔 :broken_heart: 💓 :heartbeat: 💗 :heartpulse: 💕 :two_hearts: 💞 :revolving_hearts: 💘 :cupid: 💖 :sparkling_heart: ✨ :sparkles: ⭐️ :star: 🌟 :star2: 💫 :dizzy: 💥 :boom: 💥 :collision: 💢 :anger: ❗️ :exclamation: ❓ :question: ❕ :grey_exclamation: ❔ :grey_question: 💤 :zzz: 💨 :dash: 💦 :sweat_drops: 🎶 :notes: 🎵 :musical_note: 🔥 :fire: 💩 :hankey: 💩 :poop: 💩 :shit: 👍 :+1: 👍 :thumbsup: 👎 :-1: 👎 :thumbsdown: 👌 :ok_hand: 👊 :punch: 👊 :facepunch: ✊ :fist: ✌️ :v: 👋 :wave: ✋ :hand: ✋ :raised_hand: 👐 :open_hands: ☝️ :point_up: 👇 :point_down: 👈 :point_left: 👉 :point_right: 🙌 :raised_hands: 🙏 :pray: 👆 :point_up_2: 👏 :clap: 💪 :muscle: 🤘 :metal: 🖕 :fu: 🚶 :walking: 🏃 :runner: 🏃 :running: 👫 :couple: 👪 :family: 👬 :two_men_holding_hands: 👭 :two_women_holding_hands: 💃 :dancer: 👯 :dancers: 🙆 :ok_woman: 🙅 :no_good: 💁 :information_desk_person: 🙋 :raising_hand: 👰 :bride_with_veil: 🙎 :person_with_pouting_face: 🙍 :person_frowning: 🙇 :bow: 💏 :couplekiss: 💑 :couple_with_heart: 💆 :massage: 💇 :haircut: 💅 :nail_care: 👦 :boy: 👧 :girl: 👩 :woman: 👨 :man: 👶 :baby: 👵 :older_woman: 👴 :older_man: 👱 :person_with_blond_hair: 👲 :man_with_gua_pi_mao: 👳 :man_with_turban: 👷 :construction_worker: 👮 :cop: 👼 :angel: 👸 :princess: 😺 :smiley_cat: 😸 :smile_cat: 😻 :heart_eyes_cat: 😽 :kissing_cat: 😼 :smirk_cat: 🙀 :scream_cat: 😿 :crying_cat_face: 😹 :joy_cat: 😾 :pouting_cat: 👹 :japanese_ogre: 👺 :japanese_goblin: 🙈 :see_no_evil: 🙉 :hear_no_evil: 🙊 :speak_no_evil: 💂 :guardsman: 💀 :skull: 🐾 :feet: 👄 :lips: 💋 :kiss: 💧 :droplet: 👂 :ear: 👀 :eyes: 👃 :nose: 👅 :tongue: 💌 :love_letter: 👤 :bust_in_silhouette: 👥 :busts_in_silhouette: 💬 :speech_balloon: 💭 :thought_balloon: Nature ☀️ :sunny: ☔️ :umbrella: ☁️ :cloud: ❄️ :snowflake: ⛄️ :snowman: ⚡️ :zap: 🌀 :cyclone: 🌁 :foggy: 🌊 :ocean: 🐱 :cat: 🐶 :dog: 🐭 :mouse: 🐹 :hamster: 🐰 :rabbit: 🐺 :wolf: 🐸 :frog: 🐯 :tiger: 🐨 :koala: 🐻 :bear: 🐷 :pig: 🐽 :pig_nose: 🐮 :cow: 🐗 :boar: 🐵 :monkey_face: 🐒 :monkey: 🐴 :horse: 🐎 :racehorse: 🐫 :camel: 🐑 :sheep: 🐘 :elephant: 🐼 :panda_face: 🐍 :snake: 🐦 :bird: 🐤 :baby_chick: 🐥 :hatched_chick: 🐣 :hatching_chick: 🐔 :chicken: 🐧 :penguin: 🐢 :turtle: 🐛 :bug: 🐝 :honeybee: 🐜 :ant: 🐞 :beetle: 🐌 :snail: 🐙 :octopus: 🐠 :tropical_fish: 🐟 :fish: 🐳 :whale: 🐋 :whale2: 🐬 :dolphin: 🐄 :cow2: 🐏 :ram: 🐀 :rat: 🐃 :water_buffalo: 🐅 :tiger2: 🐇 :rabbit2: 🐉 :dragon: 🐐 :goat: 🐓 :rooster: 🐕 :dog2: 🐖 :pig2: 🐁 :mouse2: 🐂 :ox: 🐲 :dragon_face: 🐡 :blowfish: 🐊 :crocodile: 🐪 :dromedary_camel: 🐆 :leopard: 🐈 :cat2: 🐩 :poodle: 🐾 :paw_prints: 💐 :bouquet: 🌸 :cherry_blossom: 🌷 :tulip: 🍀 :four_leaf_clover: 🌹 :rose: 🌻 :sunflower: 🌺 :hibiscus: 🍁 :maple_leaf: 🍃 :leaves: 🍂 :fallen_leaf: 🌿 :herb: 🍄 :mushroom: 🌵 :cactus: 🌴 :palm_tree: 🌲 :evergreen_tree: 🌳 :deciduous_tree: 🌰 :chestnut: 🌱 :seedling: 🌼 :blossom: 🌾 :ear_of_rice: 🐚 :shell: 🌐 :globe_with_meridians: 🌞 :sun_with_face: 🌝 :full_moon_with_face: 🌚 :new_moon_with_face: 🌑 :new_moon: 🌒 :waxing_crescent_moon: 🌓 :first_quarter_moon: 🌔 :waxing_gibbous_moon: 🌕 :full_moon: 🌖 :waning_gibbous_moon: 🌗 :last_quarter_moon: 🌘 :waning_crescent_moon: 🌜 :last_quarter_moon_with_face: 🌛 :first_quarter_moon_with_face: 🌔 :moon: 🌍 :earth_africa: 🌎 :earth_americas: 🌏 :earth_asia: 🌋 :volcano: 🌌 :milky_way: ⛅️ :partly_sunny: Objects 🎍 :bamboo: 💝 :gift_heart: 🎎 :dolls: 🎒 :school_satchel: 🎓 :mortar_board: 🎏 :flags: 🎆 :fireworks: 🎇 :sparkler: 🎐 :wind_chime: 🎑 :rice_scene: 🎃 :jack_o_lantern: 👻 :ghost: 🎅 :santa: 🎄 :christmas_tree: 🎁 :gift: 🔔 :bell: 🔕 :no_bell: 🎋 :tanabata_tree: 🎉 :tada: 🎊 :confetti_ball: 🎈 :balloon: 🔮 :crystal_ball: 💿 :cd: 📀 :dvd: 💾 :floppy_disk: 📷 :camera: 📹 :video_camera: 🎥 :movie_camera: 💻 :computer: 📺 :tv: 📱 :iphone: ☎️ :phone: ☎️ :telephone: 📞 :telephone_receiver: 📟 :pager: 📠 :fax: 💽 :minidisc: 📼 :vhs: 🔉 :sound: 🔈 :speaker: 🔇 :mute: 📢 :loudspeaker: 📣 :mega: ⌛️ :hourglass: ⏳ :hourglass_flowing_sand: ⏰ :alarm_clock: ⌚️ :watch: 📻 :radio: 📡 :satellite: ➿ :loop: 🔍 :mag: 🔎 :mag_right: 🔓 :unlock: 🔒 :lock: 🔏 :lock_with_ink_pen: 🔐 :closed_lock_with_key: 🔑 :key: 💡 :bulb: 🔦 :flashlight: 🔆 :high_brightness: 🔅 :low_brightness: 🔌 :electric_plug: 🔋 :battery: 📲 :calling: ✉️ :email: 📫 :mailbox: 📮 :postbox: 🛀 :bath: 🛁 :bathtub: 🚿 :shower: 🚽 :toilet: 🔧 :wrench: 🔩 :nut_and_bolt: 🔨 :hammer: 💺 :seat: 💰 :moneybag: 💴 :yen: 💵 :dollar: 💷 :pound: 💶 :euro: 💳 :credit_card: 💸 :money_with_wings: 📧 :e-mail: 📥 :inbox_tray: 📤 :outbox_tray: ✉️ :envelope: 📨 :incoming_envelope: 📯 :postal_horn: 📪 :mailbox_closed: 📬 :mailbox_with_mail: 📭 :mailbox_with_no_mail: 🚪 :door: 🚬 :smoking: 💣 :bomb: 🔫 :gun: 🔪 :hocho: 💊 :pill: 💉 :syringe: 📄 :page_facing_up: 📃 :page_with_curl: 📑 :bookmark_tabs: 📊 :bar_chart: 📈 :chart_with_upwards_trend: 📉 :chart_with_downwards_trend: 📜 :scroll: 📋 :clipboard: 📆 :calendar: 📅 :date: 📇 :card_index: 📁 :file_folder: 📂 :open_file_folder: ✂️ :scissors: 📌 :pushpin: 📎 :paperclip: ✒️ :black_nib: ✏️ :pencil2: 📏 :straight_ruler: 📐 :triangular_ruler: 📕 :closed_book: 📗 :green_book: 📘 :blue_book: 📙 :orange_book: 📓 :notebook: 📔 :notebook_with_decorative_cover: 📒 :ledger: 📚 :books: 🔖 :bookmark: 📛 :name_badge: 🔬 :microscope: 🔭 :telescope: 📰 :newspaper: 🏈 :football: 🏀 :basketball: ⚽️ :soccer: ⚾️ :baseball: 🎾 :tennis: 🎱 :8ball: 🏉 :rugby_football: 🎳 :bowling: ⛳️ :golf: 🚵 :mountain_bicyclist: 🚴 :bicyclist: 🏇 :horse_racing: 🏂 :snowboarder: 🏊 :swimmer: 🏄 :surfer: 🎿 :ski: ♠️ :spades: ♥️ :hearts: ♣️ :clubs: ♦️ :diamonds: 💎 :gem: 💍 :ring: 🏆 :trophy: 🎼 :musical_score: 🎹 :musical_keyboard: 🎻 :violin: 👾 :space_invader: 🎮 :video_game: 🃏 :black_joker: 🎴 :flower_playing_cards: 🎲 :game_die: 🎯 :dart: 🀄️ :mahjong: 🎬 :clapper: 📝 :memo: 📝 :pencil: 📖 :book: 🎨 :art: 🎤 :microphone: 🎧 :headphones: 🎺 :trumpet: 🎷 :saxophone: 🎸 :guitar: 👞 :shoe: 👡 :sandal: 👠 :high_heel: 💄 :lipstick: 👢 :boot: 👕 :shirt: 👕 :tshirt: 👔 :necktie: 👚 :womans_clothes: 👗 :dress: 🎽 :running_shirt_with_sash: 👖 :jeans: 👘 :kimono: 👙 :bikini: 🎀 :ribbon: 🎩 :tophat: 👑 :crown: 👒 :womans_hat: 👞 :mans_shoe: 🌂 :closed_umbrella: 💼 :briefcase: 👜 :handbag: 👝 :pouch: 👛 :purse: 👓 :eyeglasses: 🎣 :fishing_pole_and_fish: ☕️ :coffee: 🍵 :tea: 🍶 :sake: 🍼 :baby_bottle: 🍺 :beer: 🍻 :beers: 🍸 :cocktail: 🍹 :tropical_drink: 🍷 :wine_glass: 🍴 :fork_and_knife: 🍕 :pizza: 🍔 :hamburger: 🍟 :fries: 🍗 :poultry_leg: 🍖 :meat_on_bone: 🍝 :spaghetti: 🍛 :curry: 🍤 :fried_shrimp: 🍱 :bento: 🍣 :sushi: 🍥 :fish_cake: 🍙 :rice_ball: 🍘 :rice_cracker: 🍚 :rice: 🍜 :ramen: 🍲 :stew: 🍢 :oden: 🍡 :dango: 🥚 :egg: 🍞 :bread: 🍩 :doughnut: 🍮 :custard: 🍦 :icecream: 🍨 :ice_cream: 🍧 :shaved_ice: 🎂 :birthday: 🍰 :cake: 🍪 :cookie: 🍫 :chocolate_bar: 🍬 :candy: 🍭 :lollipop: 🍯 :honey_pot: 🍎 :apple: 🍏 :green_apple: 🍊 :tangerine: 🍋 :lemon: 🍒 :cherries: 🍇 :grapes: 🍉 :watermelon: 🍓 :strawberry: 🍑 :peach: 🍈 :melon: 🍌 :banana: 🍐 :pear: 🍍 :pineapple: 🍠 :sweet_potato: 🍆 :eggplant: 🍅 :tomato: 🌽 :corn: Places 🏠 :house: 🏡 :house_with_garden: 🏫 :school: 🏢 :office: 🏣 :post_office: 🏥 :hospital: 🏦 :bank: 🏪 :convenience_store: 🏩 :love_hotel: 🏨 :hotel: 💒 :wedding: ⛪️ :church: 🏬 :department_store: 🏤 :european_post_office: 🌇 :city_sunrise: 🌆 :city_sunset: 🏯 :japanese_castle: 🏰 :european_castle: ⛺️ :tent: 🏭 :factory: 🗼 :tokyo_tower: 🗾 :japan: 🗻 :mount_fuji: 🌄 :sunrise_over_mountains: 🌅 :sunrise: 🌠 :stars: 🗽 :statue_of_liberty: 🌉 :bridge_at_night: 🎠 :carousel_horse: 🌈 :rainbow: 🎡 :ferris_wheel: ⛲️ :fountain: 🎢 :roller_coaster: 🚢 :ship: 🚤 :speedboat: ⛵️ :boat: ⛵️ :sailboat: 🚣 :rowboat: ⚓️ :anchor: 🚀 :rocket: ✈️ :airplane: 🚁 :helicopter: 🚂 :steam_locomotive: 🚊 :tram: 🚞 :mountain_railway: 🚲 :bike: 🚡 :aerial_tramway: 🚟 :suspension_railway: 🚠 :mountain_cableway: 🚜 :tractor: 🚙 :blue_car: 🚘 :oncoming_automobile: 🚗 :car: 🚗 :red_car: 🚕 :taxi: 🚖 :oncoming_taxi: 🚛 :articulated_lorry: 🚌 :bus: 🚍 :oncoming_bus: 🚨 :rotating_light: 🚓 :police_car: 🚔 :oncoming_police_car: 🚒 :fire_engine: 🚑 :ambulance: 🚐 :minibus: 🚚 :truck: 🚋 :train: 🚉 :station: 🚆 :train2: 🚅 :bullettrain_front: 🚄 :bullettrain_side: 🚈 :light_rail: 🚝 :monorail: 🚃 :railway_car: 🚎 :trolleybus: 🎫 :ticket: ⛽️ :fuelpump: 🚦 :vertical_traffic_light: 🚥 :traffic_light: ⚠️ :warning: 🚧 :construction: 🔰 :beginner: 🏧 :atm: 🎰 :slot_machine: 🚏 :busstop: 💈 :barber: ♨️ :hotsprings: 🏁 :checkered_flag: 🎌 :crossed_flags: 🏮 :izakaya_lantern: 🗿 :moyai: 🎪 :circus_tent: 🎭 :performing_arts: 📍 :round_pushpin: 🚩 :triangular_flag_on_post: 🇯🇵 :jp: 🇰🇷 :kr: 🇨🇳 :cn: 🇺🇸 :us: 🇫🇷 :fr: 🇪🇸 :es: 🇮🇹 :it: 🇷🇺 :ru: 🇬🇧 :gb: 🇬🇧 :uk: 🇩🇪 :de: Symbols 1️⃣ :one: 2️⃣ :two: 3️⃣ :three: 4️⃣ :four: 5️⃣ :five: 6️⃣ :six: 7️⃣ :seven: 8️⃣ :eight: 9️⃣ :nine: 🔟 :keycap_ten: 🔢 :1234: 0️⃣ :zero: #️⃣ :hash: 🔣 :symbols: ◀️ :arrow_backward: ⬇️ :arrow_down: ▶️ :arrow_forward: ⬅️ :arrow_left: 🔠 :capital_abcd: 🔡 :abcd: 🔤 :abc: ↙️ :arrow_lower_left: ↘️ :arrow_lower_right: ➡️ :arrow_right: ⬆️ :arrow_up: ↖️ :arrow_upper_left: ↗️ :arrow_upper_right: ⏬ :arrow_double_down: ⏫ :arrow_double_up: 🔽 :arrow_down_small: ⤵️ :arrow_heading_down: ⤴️ :arrow_heading_up: ↩️:leftwards_arrow_with_hook: ↪️ :arrow_right_hook: ↔️ :left_right_arrow: ↕️ :arrow_up_down: 🔼 :arrow_up_small: 🔃 :arrows_clockwise: 🔄 :arrows_counterclockwise: ⏪ :rewind: ⏩ :fast_forward: ℹ️ :information_source: 🆗 :ok: 🔀 :twisted_rightwards_arrows: 🔁 :repeat: 🔂 :repeat_one: 🆕 :new: 🔝 :top: 🆙 :up: 🆒 :cool: 🆓 :free: 🆖 :ng: 🎦 :cinema: 🈁 :koko: 📶 :signal_strength: 🈹 :u5272: 🈴 :u5408: 🈺 :u55b6: 🈯️ :u6307: 🈷️ :u6708: 🈶 :u6709: 🈵 :u6e80: 🈚️ :u7121: 🈸 :u7533: 🈳 :u7a7a: 🈲 :u7981: 🈂️ :sa: 🚻 :restroom: 🚹 :mens: 🚺 :womens: 🚼 :baby_symbol: 🚭 :no_smoking: 🅿️ :parking: ♿️ :wheelchair: 🚇 :metro: 🛄 :baggage_claim: 🉑 :accept: 🚾 :wc: 🚰 :potable_water: 🚮 :put_litter_in_its_place: ㊙️ :secret: ㊗️ :congratulations: Ⓜ️ :m: 🛂 :passport_control: 🛅 :left_luggage: 🛃 :customs: 🉐 :ideograph_advantage: 🆑 :cl: 🆘 :sos: 🆔 :id: 🚫 :no_entry_sign: 🔞 :underage: 📵 :no_mobile_phones: 🚯 :do_not_litter: 🚱 :non-potable_water: 🚳 :no_bicycles: 🚷 :no_pedestrians: 🚸 :children_crossing: ⛔️ :no_entry: ✳️ :eight_spoked_asterisk: ✴️ :eight_pointed_black_star: 💟 :heart_decoration: 🆚 :vs: 📳 :vibration_mode: 📴 :mobile_phone_off: 💹 :chart: 💱 :currency_exchange: ♈️ :aries: ♉️ :taurus: ♊️ :gemini: ♋️ :cancer: ♌️ :leo: ♍️ :virgo: ♎️ :libra: ♏️ :scorpius: ♐️ :sagittarius: ♑️ :capricorn: ♒️ :aquarius: ♓️ :pisces: ⛎ :ophiuchus: 🔯 :six_pointed_star: ❎:negative_squared_cross_mark: 🅰️ :a: 🅱️ :b: 🆎 :ab: 🅾️ :o2: 💠:diamond_shape_with_a_dot_inside: ♻️ :recycle: 🔚 :end: 🔛 :on: 🔜 :soon: 🕐 :clock1: 🕜 :clock130: 🕙 :clock10: 🕥 :clock1030: 🕚 :clock11: 🕦 :clock1130: 🕛 :clock12: 🕧 :clock1230: 🕑 :clock2: 🕝 :clock230: 🕒 :clock3: 🕞 :clock330: 🕓 :clock4: 🕟 :clock430: 🕔 :clock5: 🕠 :clock530: 🕕 :clock6: 🕡 :clock630: 🕖 :clock7: 🕢 :clock730: 🕗 :clock8: 🕣 :clock830: 🕘 :clock9: 🕤 :clock930: 💲 :heavy_dollar_sign: ©️ :copyright: ®️ :registered: ™️ :tm: ❌ :x: ❗️ :heavy_exclamation_mark: ‼️ :bangbang: ⁉️ :interrobang: ⭕️ :o: ✖️ :heavy_multiplication_x: ➕ :heavy_plus_sign: ➖ :heavy_minus_sign: ➗ :heavy_division_sign: 💮 :white_flower: 💯 :100: ✔️ :heavy_check_mark: ☑️ :ballot_box_with_check: 🔘 :radio_button: 🔗 :link: ➰ :curly_loop: 〰️ :wavy_dash: 〽️ :part_alternation_mark: ✅ :white_check_mark: 🔲 :black_square_button: 🔳 :white_square_button: ⚫️ :black_circle: ⚪️ :white_circle: 🔴 :red_circle: 🔵 :large_blue_circle: 🔷 :large_blue_diamond: 🔶 :large_orange_diamond: 🔹 :small_blue_diamond: 🔸 :small_orange_diamond: 🔺 :small_red_triangle: 🔻 :small_red_triangle_down: 🔱 :trident: 参考链接 https://www.kuangstudy.com/bbs/1363014604904587265 https://blog.csdn.net/u011583927/article/details/104094284 https://note.oddfar.com/pages/fe0004/","categories":[{"name":"工具","slug":"工具","permalink":"https://mlwtools.cloudns.biz/categories/%E5%B7%A5%E5%85%B7/"}],"tags":[{"name":"Git","slug":"Git","permalink":"https://mlwtools.cloudns.biz/tags/Git/"}]},{"title":"Git的SSH免密登录","slug":"02.工具/Git安装配置教程/07.Git - SSH免密登录","date":"2024-01-17T00:00:00.000Z","updated":"2024-01-18T07:10:02.423Z","comments":true,"path":"2024/01/17/02.gong-ju/git-an-zhuang-pei-zhi-jiao-cheng/07.git-ssh-mian-mi-deng-lu/","link":"","permalink":"https://mlwtools.cloudns.biz/2024/01/17/02.gong-ju/git-an-zhuang-pei-zhi-jiao-cheng/07.git-ssh-mian-mi-deng-lu/","excerpt":"","text":"步骤我们可以看到远程仓库中还有一个 SSH 的地址，因此我们也可以使用 SSH 实现免密码登录。 进入 C:/Users/用户名/.ssh 目录生成公钥（没有 .ssh 目录则创建）。 右键打开 Git Bash Here。 ssh-keygen -t rsa -C GitHub注册邮箱 执行并回车三次后会在 .ssh 目录生成两个文件： id_rsa：私钥 id_rsa.pub：公钥，给 GitHub，这样 GitHub 才能自动访问私钥所在的电脑，无需重新登录 把公钥交给 GitHub 复制 id_rsa.pub 文件内容 前往 GitHub：点击用户头像，点击 Settings，找到 SSH and GPG keys，然后 New SSH，粘贴进去 Gitee：点击设置，找到 SSH 公钥，粘贴进去 公钥可以多个平台同时设置 SSH。 GitHub 设置公钥图 好处接下来再往远程仓库 push 东西的时候使用 SSH 连接就不需要登录了，因为 GitHub在国外，登录容易失败。 别名对于用 https 已经克隆在本地的仓库，我们可以加个「别名」来进行 SSH 连接。 基本语法 git remote -v ：查看当前所有远程地址别名。 git remote add：别名 远程地址。 案例 我们提交到远程仓库的指令是： git push 远程仓库地址 分支 这个地址可以是 HTTPS 也可以是 SSH。 但由于地址太长了，可以用「别名」代替地址。 添加别名： git remote add kele git@github.com:Kele-Bingtang/Kele-Bingtang.github.io.git 推送到远程仓库： git push kele master 我们 clone 项目会做如下操作： 拉取代码 初始化本地仓库 创建别名，默认是 origin","categories":[{"name":"工具","slug":"工具","permalink":"https://mlwtools.cloudns.biz/categories/%E5%B7%A5%E5%85%B7/"}],"tags":[{"name":"Git","slug":"Git","permalink":"https://mlwtools.cloudns.biz/tags/Git/"}]},{"title":"Git基本原理","slug":"02.工具/Git安装配置教程/05.Git - 基本原理","date":"2024-01-16T00:00:00.000Z","updated":"2024-01-18T07:10:02.458Z","comments":true,"path":"2024/01/16/02.gong-ju/git-an-zhuang-pei-zhi-jiao-cheng/05.git-ji-ben-yuan-li/","link":"","permalink":"https://mlwtools.cloudns.biz/2024/01/16/02.gong-ju/git-an-zhuang-pei-zhi-jiao-cheng/05.git-ji-ben-yuan-li/","excerpt":"","text":"哈希法 哈希是一个系列的加密算法，各个不同的哈希算法虽然加密强度不同，但是有以下几个共同点： 不管输入数据的数据量有多大，输入同一个哈希算法，得到的加密结果长度固定。 哈希算法确定，输入数据确定，输出数据能够保证不变 哈希算法确定，输入数据有变化，输出数据一定有变化，而且通常变化很大 哈希算法不可逆 Git 底层采用的是 SHA-1 算法。 哈希算法可以被用来验证文件。原理如下图所示： Git 就是靠这种机制来从根本上保证数据完整性的。 Git保存版本的机制集中式版本控制工具的文件管理机制以文件变更列表的方式存储信息。这类系统将它们保存的信息看作是一组基本 文件和每个文件随时间逐步累积的差异。 Git文件管理机制Git 把数据看作是小型文件系统的一组快照。每次提交更新时 Git 都会对当前的全部文件制作一个快照并保存这个快照的索引。为了高效，如果文件没有修改，Git 不再重新存储该文件，而是只保留一个链接指向之前存储的文件。所以 Git 的工作方式可以称之为快照流。 Git文件管理机制细节Git 的「提交对象」（每个文件对应的 hash 值） 提交对象及其父对象形成的链条 Git分支管理机制分支的创建新建一个指针 分支的切换HEAD 指向 HEAD 指向 testing 时提交了内容 切换回 master HEAD 指向 master 时 提交了数据","categories":[{"name":"工具","slug":"工具","permalink":"https://mlwtools.cloudns.biz/categories/%E5%B7%A5%E5%85%B7/"}],"tags":[{"name":"Git","slug":"Git","permalink":"https://mlwtools.cloudns.biz/tags/Git/"}]},{"title":"Git常用命令","slug":"02.工具/Git安装配置教程/03.Git - 常用命令","date":"2024-01-15T00:00:00.000Z","updated":"2024-01-18T07:10:02.417Z","comments":true,"path":"2024/01/15/02.gong-ju/git-an-zhuang-pei-zhi-jiao-cheng/03.git-chang-yong-ming-ling/","link":"","permalink":"https://mlwtools.cloudns.biz/2024/01/15/02.gong-ju/git-an-zhuang-pei-zhi-jiao-cheng/03.git-chang-yong-ming-ling/","excerpt":"","text":"Git常用命令本地命令 命令名称 作用 git config –global user.name 用户名 设置用户签名 git config –global user.email 邮箱 设置用户签名 git init 初始化本地库 git status 查看本地库状态 git add 文件名（-A 代表目录及子目录下所有文件名） 添加到暂存区 git commit -m “日志信息” [文件名]（不加文件名，默认所有文件都添加该日志信息） 添加到本地库 git reflog 查看历史记录（简要） git log 查看历史记录（详细） git log –pretty=oneline 一行显示一个版本信息（版本号完整） git log –oneline 一行显示一个版本信息（版本号简写） git reset –hard 版本号 版本穿梭、跳转 git diff [文件名] 比较工作区中和暂存区的文件 git diff [本地库中历史版本] [文件名] 比较工作区中的文件和本地库历史记录 git branch 分支名 创建分支 git branch -D 分支名 删除分支 git branch -m 新的分支名 将当前分支名改为新的分支名 git branch -v 查看分支 git checkout 分支名 切换分支 git merge 分支名 合并分支 远程命令 命令名称 作用 git remote -v 查看当前所有远程地址别名 git remote add 别名 远程地址 起别名 git push 别名 分支 推送本地分支上的内容到远程仓库 git clone 远程地址 将远程仓库的内容克隆到本地 git pull 远程库地址别名 远程分支名 将远程仓库对于分支最新内容拉下来后与 当前本地分支直接合并 如果 git push 不加别名和分支，默认别名是 origin，分支是 master。 我们 clone 项目会自动做如下操作： 拉取代码 初始化本地仓库 创建别名，默认是 origin 具体看 Git - SSH免密登录。 设置用户签名项目级别/仓库级别仅在当前本地库范围内有效。 git config user.name 用户名 git config user.email 邮箱 信息保存位置：./.git/config 文件里。 系统用户级别登录当前操作系统的用户范围。 git config --global user.name 用户名 git config --global user.email 邮箱 信息保存位置：设置了用户签名，会在用户盘下生成 .gitconfig 文件，里面也可以直接修改自己的信息。 级别优先级 就近原则：项目级别优先于系统用户级别，二者都有时采用项目级别的签名 如果只有系统用户级别的签名，就以系统用户级别的签名为准 二者都没有不允许 说明签名的作用是区分不同操作者身份。用户的签名信息在每一个版本的提交信息中能够看到，以此确认本次提交是谁做的。Git 首次安装必须设置一下用户签名，否则无法提交代码。 邮箱可以是虚拟邮箱，Git 不会去识别。 注意：这里设置用户签名和将来登录 GitHub（或其他代码托管中心）的账号没有任何关系。 初始化本地库基本语法： git init 该指令会将目录下的所有子目录以及文件交给 Git 管理，也是我们使用 Git 最重要的一步。 执行该指令后，会在当前目录下生成 .git 目录，该目录默认是隐藏的。 注意：.git 目录中存放的是本地库相关的子目录和文件，不要删除，也不要胡乱修改。 查看本地库状态查看工作区、暂存区状态。 基本语法： git status 可以看到，我删除了 3 个文件，还没有放到暂存区（红色），存到了暂存区（绿色），存到了本地库（消失）。 文件增删改操作删除暂存区的文件git rm --cached 文件名 添加文件到暂存区git add 文件名 git add -A # -A 代表全名文件 提交文件到本地库git commit -m \"日志信息\" [文件名] # 文件名可不写 历史版本操作查看历史版本git log # 查看详细版本信息 git reflog # 查看简要版本信息 git log --pretty=oneline # 一行显示一个版本信息（版本号完整） git log --oneline # 一行显示一个版本信息（版本号简写） 多屏显示控制方式： 空格向下翻页 b 向上翻页 q 退出 切换历史版本 基于索引值操作[推荐] git reset --hard [局部索引值] git reset --hard a6ace91 # 例子 使用 ^ 符号：只能后退 git reset --hard HEAD^ 注：一个 ^ 表示后退一步，n 个表示后退。 使用 ~ 符号：只能后退 git reset --hard HEAD~n 注：表示后退 n 步。 使用 HEAD 符号，恢复当前提交本地库的版本 git reset --hard HEAD 注：在当前版本中删除了某个文件，可以恢复到当前最初的版本。 reset 命令的三个参数对比 --soft 参数 仅仅在本地库移动 HEAD 指针 --mixed 参数 在本地库移动 HEAD 指针 重置暂存区 --hard 参数 在本地库移动 HEAD 指针 重置暂存区 重置工作区 比较文件操作 将工作区中的文件和暂存区进行比较 git diff [文件名] 将工作区中的文件和本地库历史记录比较 git diff [本地库中历史版本] [文件名] 不带文件名则比较多个文件。 如果 [本地库中历史版本] 是 HEAD，则比较当前版本。 分支操作 什么是分支？在版本控制过程中，同时推进多个任务，为每个任务，我们就可以创建每个任务的单独分支。使用分支意味着程序员可以把自己的工作从开发主线上分离开来，开发自己分支的时候，不会影响主线分支的运行。对于初学者而言，分支可以简单理解为副本，一个分支就是一个单独的副本。（分支底层其实也是指针的引用） 分支的好处？同时并行推进多个功能开发，提高开发效率。 各个分支在开发过程中，如果某一个分支开发失败，不会对其他分支有任何影响。失败的分支删除重新开始即可。 分支操作 命令名称 作用 git branch 分支名 创建分支 git branch -D 分支名 删除分支 git branch -m 新的分支名 将当前分支名改为新的分支名 git branch -v 查看分支 git checkout 分支名 切换分支 git merge 分支名 合并分支 创建分支 git branch [分支名] 删除分支 git branch -D 分支名 将当前分支名改为新的分支名 git branch -m 新的分支名 查看分支 git branch -v 切换分支 git checkout [分支名] 合并分支 第一步：切换到接受修改的分支（被合并，增加新内容）上 git checkout [被合并的分支名] 第二步：执行 merge 命令 git merge [有新内容的分支名] 分支冲突 产生冲突 冲突的表现：后面状态为 MERGING 冲突产生的原因：合并分支时，两个分支在 同一个文件的同一个位置 有两套完全不同的修改。Git 无法替 我们决定使用哪一个。必须 人为决定 新代码内容。 冲突如图（修改的是同一个位置）： 解决冲突 冲突的解决： 第一步：编辑文件，删除特殊符号 第二步：把文件修改到满意的程度，保存退出 第三步：添加到暂存区，git add [文件名] 第四步：执行提交，git commit -m \"日志信息\"（注意：此时 commit 一定不能带具体文件名） 创建分支和切换分支图解 master、hot-fix 其实都是指向具体版本记录的指针。当前所在的分支，其实是由 HEAD 决定的。所以创建分支的本质就是多创建一个指针。 HEAD 如果指向 master，那么我们现在就在 master 分支上。 HEAD 如果执行 hotfix，那么我们现在就在 hotfix 分支上。 分支进阶操作删除所有记录想清空所有 commit 的信息记录，就像形成一个全新的仓库，且代码不变。 先切换到新的分支 git branch kele git checkout kele 添加所有文件到暂存区（除了 .gitignore 中排除的） git add -A 提交跟踪过的文件到本地库 git commit -am \"commit message\" 删除 master 分支 git branch -D master 重命名当前分支为 master git branch -m master 提交到远程 master 分支 git push -f origin master 删除上次记录如果只是想修改上次提交的代码，做一次更完美的 commit，可以这样： 回到到上个版本(注：不要带 --hard) git reset commitId 暂存修改 git stash 强制 push，这样远程的最新的一次 commit 被删除 git push --force 释放暂存的修改，开始修改代码 git stash pop 添加、推送 git add git commit -m \"massage\" git push 同时修改本地分支名和对应的远程分支名修改前要确保本地分支的代码是最新的，并且修改后不会影响到同事的代码。 修改本地分支名 git branch -m oldBranchName newBranchName 删除远程分支 git push origin :oldBranchName 改名后的本地分支推送到远程 git push --set-upstream origin newBranchName","categories":[{"name":"工具","slug":"工具","permalink":"https://mlwtools.cloudns.biz/categories/%E5%B7%A5%E5%85%B7/"}],"tags":[{"name":"Git","slug":"Git","permalink":"https://mlwtools.cloudns.biz/tags/Git/"}]},{"title":"Git介绍与安装","slug":"02.工具/Git安装配置教程/01.Git - 介绍与安装","date":"2024-01-14T00:00:00.000Z","updated":"2024-01-18T07:10:02.448Z","comments":true,"path":"2024/01/14/02.gong-ju/git-an-zhuang-pei-zhi-jiao-cheng/01.git-jie-shao-yu-an-zhuang/","link":"","permalink":"https://mlwtools.cloudns.biz/2024/01/14/02.gong-ju/git-an-zhuang-pei-zhi-jiao-cheng/01.git-jie-shao-yu-an-zhuang/","excerpt":"","text":"Git概述Git 是一个免费的、开源的分布式版本控制系统，可以快速高效地处理从小型到大型的各种项目。 Git 易于学习，占地面积小，性能极快。它具有廉价的本地库，方便的暂存区域和多个工作流分支等特性。其性能优于 Subversion、CVS、Perforce 和 ClearCase 等版本控制工具。 何为版本控制版本控制是一种记录文件内容变化，以便将来查阅特定版本修订情况的系统。 版本控制其实最重要的是可以记录文件修改历史记录，从而让用户能够查看历史版本，方便版本切换。 为什么需要版本控制 协同修改 多人并行不悖的修改服务器端的同一个文件 数据备份 不仅保存目录和文件的当前状态，还能够保存每一个提交过的历史状态 版本管理 在保存每一个版本的文件信息的时候要做到不保存重复数据，以节约存储空间，提高运行效率。这方面 SVN 采用的是增量式管理的方式，而 Git 采取了文件系统快照的方式 权限控制 对团队中参与开发的人员进行权限控制 对团队外开发者贡献的代码进行审核，这是 Git 独有 历史记录 查看修改人、修改时间、修改内容、日志信息 将本地文件恢复到某一个历史状态 分支管理 允许开发团队在工作过程中多条生产线同时推进任务，进一步提高效率 版本控制工具 集中式版本控制工具 CVS、SVN、VSS …… 集中化的版本控制系统诸如 CVS、SVN 等，都有一个单一的集中管理的服务器，保存所有文件的修订版本，而协同工作的人们都通过客户端连到这台服务器，取出最新的文件或者提交更新。多年以来，这已成为版本控制系统的标准做法。 这种做法带来了许多好处，每个人都可以在一定程度上看到项目中的其他人正在做些什么。而管理员也可以轻松掌控每个开发者的权限，并且管理一个集中化的版本控制系统，要远比在各个客户端上维护本地数据库来得轻松容易。 事分两面，有好有坏。这么做显而易见的缺点是中央服务器的单点故障。如果服务器宕机一小时，那么在这一小时内，谁都无法提交更新，也就无法协同工作。 分布式版本控制工具 Git、Mercurial、Bazaar、Darcs …… 像 Git 这种分布式版本控制工具，客户端提取的不是最新版本的文件快照，而是把代码仓库完整地镜像下来（本地库）。这样任何一处协同工作用的文件发生故障，事后都可以用其他客户端的本地仓库进行恢复。因为每个客户端的每一次文件提取操作，实际上都是一次对整个文件仓库的完整备份。 分布式的版本控制系统出现之后,解决了集中式版本控制系统的缺陷： 服务器断网的情况下也可以进行开发（因为版本控制是在本地进行的） 每个客户端保存的也都是整个完整的项目（包含历史记录，更加安全） Git简介Git简史 Git优势 大部分操作在本地完成，不需要联网 完整性保证 尽可能添加数据而不是删除或修改数据 分支操作非常快捷流畅 与 Linux 命令全面兼 Git结构 Git 本地结构分为： 工作区，即我们写的代码文件 暂存区，通过 git add 指令将代码文件添加到暂存区 本地库，通过 git commit 指令将暂存区的代码文件添加到本地库 远程库，通过 git push 指令将本地库的代码文件上传到远程库，即备份到云端 代码托管中心代码托管中心的任务：维护远程库。 局域网环境下 GitLab 服务器 外网环境下 GitHub（国外） Gitee 码云（国内） Git下载与安装官网地址：https://git-scm.com/ 官网下载地址：https://git-scm.com/download 这里演示 Windows 的安装步骤： 安装到一个没有中文，没有空格的目录下，不建议放在 C 盘 默认值 建议选择 Vim 编辑器，也就是 Linux 使用的编辑器 默认分支名设置，选择让 Git 决定，分支名默认为 master，下一步 建议不修改 PATH 环境变量，否则一些环境变量无法使用 使用默认值，即 OpenSSL 库，限制性低 选择第一个默认值 选择 Git 提供的终端，不要合并到 CMD 终端，否则 Git 的一些命令会覆盖 CMD 的命令 选择 Git pull 合并的模式，选择默认，然后下一步 选择 Git 的凭据管理器，选择默认的跨平台的凭据管理器，然后下一步 其他配置，选择默认设置，然后下一步 实验室功能，技术还不成熟，有已知的 bug，不要勾选，然后点击右下角的 Install 按钮，开始安装 Git 自此，安装成功。 Git安装验证在 Git Bash 终端里输入 git –version 查看 git 版本，如图所示，说明 Git 安装成功。 本地库和远程库团队内部协作 当第一个本地库 push 到远程库时，第二个本地库就可以 clone 到自己，当修改了一些内容后，第二个本地库先加入团队，然后重新 push 到远程库，然后第一个本地库就可以 pull 更新自己。 跨团队协作 当第一个本地库和第二个本地库需要第三个本地库的帮忙，那么可以让第三个本地库 fork 到自己的远程库，然后 clone 到自己，修改好代码后重新 push 到自己的远程库，接着 pull request 给第一个远程库，此时并不是立即合并，而是由第一个本地库进行审核无误，再合并，最后第一个本地库和第二个本地库通过 pull 更新自己。","categories":[{"name":"工具","slug":"工具","permalink":"https://mlwtools.cloudns.biz/categories/%E5%B7%A5%E5%85%B7/"}],"tags":[{"name":"Git","slug":"Git","permalink":"https://mlwtools.cloudns.biz/tags/Git/"}]},{"title":"免费申请hax纯ipv6的vps","slug":"01.研究/免费申请hax纯ipv6的vps/免费申请hax纯ipv6的vps","date":"2024-01-11T00:00:00.000Z","updated":"2024-01-18T07:23:44.878Z","comments":true,"path":"2024/01/11/01.yan-jiu/mian-fei-shen-qing-hax-chun-ipv6-de-vps/mian-fei-shen-qing-hax-chun-ipv6-de-vps/","link":"","permalink":"https://mlwtools.cloudns.biz/2024/01/11/01.yan-jiu/mian-fei-shen-qing-hax-chun-ipv6-de-vps/mian-fei-shen-qing-hax-chun-ipv6-de-vps/","excerpt":"","text":"免费申请hax纯ipv6的vps准备tg账号一个 注册地址：https://hax.co.id/register 注册过程1、首先打开https://t.me/HaxTG_bot ，发送/getid给机器人，获得tg的ID 2、在注册页面填写ID，然后点击提交 3、tg中收到机器人发送的code，在接下来的页面填写code和新登陆密码 4、然后在https://hax.co.id/login 登陆 5、点击菜单：新建vps，选择数据中心位置，选择操作系统，填写ssh密码，选择用途，勾选下面5个协议，即可创建。 注意： 当数据中心没有选项时表示无货，每天凌晨1:00可能会放鸡，请准时蹲守！库存机器人https://t.me/hax_seats 此vps有效期为7天，到期可续。 续期方法登录后在https://hax.co.id/vps-renew/ 填写code，然后通过人机验证即可续期7天。 点续期后会发送code到你的电报账号 链接ipv6链接或者直接开启wireguard也可链接到ssh 油管教程","categories":[{"name":"研究","slug":"研究","permalink":"https://mlwtools.cloudns.biz/categories/%E7%A0%94%E7%A9%B6/"}],"tags":[{"name":"VPS","slug":"VPS","permalink":"https://mlwtools.cloudns.biz/tags/VPS/"}]},{"title":"VPS搭建hysteria2","slug":"01.研究/VPS搭建hysteria2/hysteria2","date":"2024-01-10T00:00:00.000Z","updated":"2024-01-18T07:23:44.883Z","comments":true,"path":"2024/01/10/01.yan-jiu/vps-da-jian-hysteria2/hysteria2/","link":"","permalink":"https://mlwtools.cloudns.biz/2024/01/10/01.yan-jiu/vps-da-jian-hysteria2/hysteria2/","excerpt":"","text":"hysteria2https://blog.misaka.rest/2023/09/02/hysteria2-script/ -rw-r--r--. 1 root root 25 Dec 5 06:44 ca.log -rw-r--r--. 1 root root 5268 Dec 5 06:44 cert.crt -rwxrwxrwx. 1 root root 4940 Nov 29 05:44 jp_centos_vpn.ovpn -rwxrwxrwx. 1 root root 22223 Nov 29 03:24 nezha.sh -rwxrwxrwx. 1 root root 23714 Nov 29 05:43 openvpn-install.sh -rw-------. 1 root root 227 Dec 5 06:44 private.key [root@ip-172-26-3-214 ~]# wget -N --no-check-certificate https://raw.githubusercontent.com/Misaka-blog/hysteria-install/main/hy2/hysteria.sh &amp;&amp; bash hysteria.sh --2023-12-05 06:48:00-- https://raw.githubusercontent.com/Misaka-blog/hysteria-install/main/hy2/hysteria.sh Resolving raw.githubusercontent.com (raw.githubusercontent.com)... 185.199.111.133, 185.199.110.133, 185.199.109.133, ... Connecting to raw.githubusercontent.com (raw.githubusercontent.com)|185.199.111.133|:443... connected. HTTP request sent, awaiting response... 200 OK Length: 21341 (21K) [text/plain] Saving to: ‘hysteria.sh’ 100%[==========================================================================================================================================&gt;] 21,341 --.-K/s in 0s Last-modified header missing -- time-stamps turned off. 2023-12-05 06:48:00 (115 MB/s) - ‘hysteria.sh’ saved [21341/21341] ############################################################# # Hysteria 2 一键安装脚本 # # 作者: MisakaNo の 小破站 # # 博客: https://blog.misaka.rest # # GitHub 项目: https://github.com/Misaka-blog # # GitLab 项目: https://gitlab.com/Misaka-blog # # Telegram 频道: https://t.me/misakanocchannel # # Telegram 群组: https://t.me/misakanoc # # YouTube 频道: https://www.youtube.com/@misaka-blog # ############################################################# 1. 安装 Hysteria 2 2. 卸载 Hysteria 2 ------------- 3. 关闭、开启、重启 Hysteria 2 4. 修改 Hysteria 2 配置 5. 显示 Hysteria 2 配置文件 ------------- 6. 更新 Hysteria 2 内核 ------------- 0. 退出脚本 请输入选项 [0-5]: 1 hysteria.sh: line 223: apt: command not found --2023-12-05 06:48:05-- https://raw.githubusercontent.com/Misaka-blog/hysteria-install/main/hy2/install_server.sh Resolving raw.githubusercontent.com (raw.githubusercontent.com)... 185.199.108.133, 185.199.111.133, 185.199.110.133, ... Connecting to raw.githubusercontent.com (raw.githubusercontent.com)|185.199.108.133|:443... connected. HTTP request sent, awaiting response... 200 OK Length: 24826 (24K) [text/plain] Saving to: ‘install_server.sh’ 100%[==========================================================================================================================================&gt;] 24,826 --.-K/s in 0s Last-modified header missing -- time-stamps turned off. 2023-12-05 06:48:05 (99.8 MB/s) - ‘install_server.sh’ saved [24826/24826] Checking for installed version ... not installed Checking for latest version ... v2.2.2 Downloading hysteria binary: https://github.com/apernet/hysteria/releases/download/app/v2.2.2/hysteria-linux-amd64 ... % Total % Received % Xferd Average Speed Time Time Time Current Dload Upload Total Spent Left Speed 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0 100 14.2M 100 14.2M 0 0 24.3M 0 --:--:-- --:--:-- --:--:-- 24.3M Installing hysteria executable ... ok Install /etc/hysteria/config.yaml ... ok Install /etc/systemd/system/hysteria-server.service ... ok Install /etc/systemd/system/hysteria-server@.service ... ok Congratulation! Hysteria 2 has been successfully installed on your server. What's next? + Take a look at the differences between Hysteria 2 and Hysteria 1 at https://hysteria.network/docs/misc/2-vs-1/ + Check out the quick server config guide at https://hysteria.network/docs/getting-started/Server/ + Edit server config file at /etc/hysteria/config.yaml + Start your hysteria server with systemctl start hysteria-server.service + Configure hysteria start on system boot with systemctl enable hysteria-server.service Hysteria 2 安装成功！ Hysteria 2 协议证书申请方式如下： 1. 必应自签证书 （默认） 2. Acme 脚本自动申请 3. 自定义证书路径 请输入选项 [1-3]: 2 检测到原有域名：hysteria2.mlwtools.site 的证书，正在应用 设置 Hysteria 2 端口 [1-65535]（回车则随机分配端口）： 将在 Hysteria 2 节点使用的端口是：48409 Hysteria 2 端口使用模式如下： 1. 单端口 （默认） 2. 端口跳跃 请输入选项 [1-2]: 2 设置范围端口的起始端口 (建议10000-65535之间)：20000 设置一个范围端口的末尾端口 (建议10000-65535之间，一定要比上面起始端口大)：30000 设置 Hysteria 2 密码（回车跳过为随机字符）： 使用在 Hysteria 2 节点的密码为：3ae75a59 请输入 Hysteria 2 的伪装网站地址 （去除https://） [回车世嘉maimai日本网站]： 使用在 Hysteria 2 节点的伪装网站为：maimai.sega.jp Created symlink from /etc/systemd/system/multi-user.target.wants/hysteria-server.service to /etc/systemd/system/hysteria-server.service. Hysteria 2 服务启动成功 ====================================================================================== Hysteria 2 代理服务安装完成 Hysteria 2 客户端 YAML 配置文件 hy-client.yaml 内容如下，并保存到 /root/hy/hy-client.yaml server: 13.230.20.211:48409,20000-30000 auth: 3ae75a59 tls: sni: hysteria2.mlwtools.site insecure: true quic: initStreamReceiveWindow: 16777216 maxStreamReceiveWindow: 16777216 initConnReceiveWindow: 33554432 maxConnReceiveWindow: 33554432 fastOpen: true socks5: listen: 127.0.0.1:5080 transport: udp: hopInterval: 30s Hysteria 2 客户端 JSON 配置文件 hy-client.json 内容如下，并保存到 /root/hy/hy-client.json { \"server\": \"13.230.20.211:48409,20000-30000\", \"auth\": \"3ae75a59\", \"tls\": { \"sni\": \"hysteria2.mlwtools.site\", \"insecure\": true }, \"quic\": { \"initStreamReceiveWindow\": 16777216, \"maxStreamReceiveWindow\": 16777216, \"initConnReceiveWindow\": 33554432, \"maxConnReceiveWindow\": 33554432 }, \"fastOpen\": true, \"socks5\": { \"listen\": \"127.0.0.1:5080\" }, \"transport\": { \"udp\": { \"hopInterval\": \"30s\" } } } Clash Meta 客户端配置文件已保存到 /root/hy/clash-meta.yaml Hysteria 2 节点分享链接如下，并保存到 /root/hy/url.txt hysteria2://3ae75a59@13.230.20.211:48409,20000-30000/?insecure=1&amp;sni=hysteria2.even.site#Misaka-Hysteria2 Hysteria 2 节点单端口的分享链接如下，并保存到 /root/hy/url.txt hysteria2://3ae75a59@13.230.20.211:48409/?insecure=1&amp;sni=hysteria2.even.site#Misaka-Hysteria2","categories":[{"name":"研究","slug":"研究","permalink":"https://mlwtools.cloudns.biz/categories/%E7%A0%94%E7%A9%B6/"}],"tags":[{"name":"Hysteria2","slug":"Hysteria2","permalink":"https://mlwtools.cloudns.biz/tags/Hysteria2/"}]},{"title":"Hexo博客部署环境搭建","slug":"01.研究/Hexo博客部署/Hexo博客部署","date":"2024-01-09T00:00:00.000Z","updated":"2024-01-18T07:23:44.847Z","comments":true,"path":"2024/01/09/01.yan-jiu/hexo-bo-ke-bu-shu/hexo-bo-ke-bu-shu/","link":"","permalink":"https://mlwtools.cloudns.biz/2024/01/09/01.yan-jiu/hexo-bo-ke-bu-shu/hexo-bo-ke-bu-shu/","excerpt":"","text":"Hexo博客部署环境搭建本地博客环境搭建`先安装本地需要的搭建环境。本地只需要安装两个软件：一个是Node.js,另一个是Git. `Node.js的安装：安装完成，打开`PowerShell`，输入`Node -v`,如果出现版本号，说明已经安装成功了。 `Git的安装：安装好后，还是打开`powerShell` 然后输入`git —version`,出现版本号，说明安装成功。 `这样本地环境就安装好了。 `安装cnpm # npm install cnpm -g `安装镜像源 # npm install nrm -g `指定使用的镜像源 # npm use xxx 百度云的环境搭建-重点`有了本地环境，我们想要别人看到我们的博客，我们还需要云服务器。现在百度智能云是有活动的，最便宜的新人只要37元一年，四舍五入等于不要钱。 (展示百度云的活动页面)，并且老用户和新用户都有不同的优惠。 `百度智能云活动链接https://cloud.baidu.com/campaign/2022/index.html 进入百度智能云的控制台，然后找到服务器，等到服务器的公网IP地址，我这里是`180.76.183.66` 。打开MobaXterm软件，当然你也可以使用任何的远程服务器链接软件。 `直接输入IP地址和密码，显示连接成功。 `然后用一条命令快速安装服务器用到的一些常用工具，文档我会发我的博客上。 安装依赖# yum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel perl-devel -y 安装git# yum install -y git 查看一下版本 # git --version 创建git使用的用户# useradd lcf `设置密码 # passwd lcf `设置权限 # chmod 740 /etc/sudoers `修改root权限 # vim /etc/sudoers 使用:set nu打开vim的行数显示，按i直接进入编辑状态。 # lcf ALL=(ALL) ALL 直接`:wq!`，进行保存，保存后再次修改权限。因为 `sudoers`是只读文件，所有要使用 `!`进行保存，否则会失败。 修改完成后记得把这个文件的权限改回来，否则很容易被攻击。服务器一定要安全为主。 `改回权限 # chmod 600 /etc/sudoers 安装Nginx`安装nginx # yum install -y nginx `启动Nginx服务 # systemctl start nginx.service `查看Nginx状态 # systemctl status nginx.service 启动后修改nginx.conf配置文件 # vim /etc/nginx/nginx.conf 修改项 `注意要修改用户` user lcf; server { listen 80 default_server; listen [::]:80 default_server; server_name 192.168.101.100; root /home/lcf/hexo; 修改完配置以后，需要重启一下Nginx服务。 `重启动Nginx服务 # systemctl restart nginx.service 如果正常启动，没有任何报错，说明Nginx配置好了。 创建网站跟目录这里放在\\home\\lcf\\hexo下。 # mkdir /home/lcf/hexo `授予权限 # chown lcf:lcf -R /home/lcf/hexo 建立git仓库# su lcf # cd /home/lcf `创建Git仓库 # git init --bare blog.git `授予Git仓库权限 # chown lcf:lcf -R blog.git 同步网站根目录# cd blog.git/hooks/ # vim post-receive `把下面的内容拷贝进去 #!/bin/sh git --work-tree=/home/lcf/hexo --git-dir=/home/lcf/blog.git checkout -f 再次修改权限 # chmod +x post-receive 这样就已经把服务器端的环境基本配置好了 本地安装和配置Hexo全局安装hexo-cli# npm install -g hexo-cli 这里就选择 D:\\blogsite\\文件夹了，这个路径你可以自行选择，什么都可以，然后输入下面的命令。 # hexo init foldername # cd foldername # npm install 可以看到在文件夹下生成了很多文件，有了这些文件就可以在本地编写博客了。 安装完这一部后，我们一般会个性化配置我们的网站信息，这时候使用code . 打开VSCode，来修改代码。 打开_config.yml对下面这些代码进行配置。 title: 'JavaEE技术栈' subtitle: 'lcfqzd的博客' description: 'JavaEE技术栈' keywords: 'Java后端开发' author: lcfqzd language: zh-CN # 主题语言 timezone: Asia/Shanghai # 中国的时区 配置完成就可以编写文章了 本地编写文章和预览你可以执行下列命令来快速创建一篇新文章或者新的页面 `创建目录 # hexo new page pagename `创建文档 # hexo new docname 这样一键就创建好了文章编写页面。默认的位置是 \\source\\_posts\\docname.md 然后把你写的markdown文章直接复制进去，粘贴复制，保存。就完成了。接下来就需要查看一下自己的文章和网站的样子了。打开VSCode的终端，然后安装hexo-server，输入下面的命令。 # npm install hexo-server --save 然后启动服务。 # hexo server 在浏览器输入地址：http://localhost:4000,就可以看到你写的博客了。 把博客上传到云服务器有了文章我们就可以把博客上传到云服务器了。但是要想用Git把代码传到服务器，是需要密钥的。这就就直接创建一下密钥。在本地电脑打开`powerShell`，创建密钥。 如果你已经有了密钥就不用再次创建了，特别是公司已经有很多git管理的项目时，否则需要都进行重新配置。我这里是已经有密钥了。到服务端创建一个存放密钥的文件夹。 `创建密钥的命令 # ssh-keygen -t rsa `切换用户 # su lcf `创建存放密钥的文件夹 # mkdir ~/.ssh `写入密钥 # vim ~/.ssh/authorized_keys 来到自己的客户端，找到C:\\Users\\lcf\\.ssh 打开id_rsa文件，直接复制全部，就可以完成了。 这样我们就可以通过lcf这个用户向服务器提交代码了，我们要测试一下，看看是否配置的可以连接上 本地测试 打开本地主机的powerShell，然后用ssh进行连接。 # ssh -v lcf@192.168.101.100 //服务器ip 安装部署器 # npm install --save hexo-deployer-git 修改本地的hexo配置文件_config.yml,打开文件后，拖动到最后边，输入下面的配置 deploy: type: git repository: lcf@192.168.101.100:/home/lcf/blog.git branch: master 安装完成后，输入下面的命令进行部署 # hexo clean # hexo g -d 如果一切正常，就可以直接传到服务器上，然后输入网址192.168.10.100就可以完成博客的浏览了，我这里没有使用域名，如果你有域名，只要把域名解析到这个网址就可以了。 好的主题博客参考： https://blog.juanertu.com/ `Oranges git clone https://github.com/zchengsite/hexo-theme-oranges.git themes/oranges # 需要手动书写编号，会原样显示 `MengD git clone -b master https://github.com/lete114/hexo-theme-MengD.git themes/MengD # 会自动生成编号，书写标题不用带编号 `ocean git clone https://github.com/zhwangart/hexo-theme-ocean.git `jelly git clone https://github.com/preccrep/hexo-theme-jelly.git themes/jelly `ayer git clone https://github.com/Shen-Yu/hexo-theme-ayer.git themes/ayer `bubuzou git clone https://github.com/Bulandent/hexo-theme-bubuzou.git `MiHo git clone https://github.com/WongMinHo/hexo-theme-miho.git themes/miho `Meadow git clone https://github.com/kb1000fx/Meadow 3-hexo next 原因是hexo在5.0之后把swig给删除了需要自己手动安装 npm i hexo-renderer-swig keep Material A-Obsidian Aurora","categories":[{"name":"研究","slug":"研究","permalink":"https://mlwtools.cloudns.biz/categories/%E7%A0%94%E7%A9%B6/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://mlwtools.cloudns.biz/tags/Hexo/"}]},{"title":"本地搭建ChatGPT","slug":"01.研究/本地搭建ChatGPT/本地搭建ChatGPT","date":"2024-01-07T00:00:00.000Z","updated":"2024-01-18T07:23:45.135Z","comments":true,"path":"2024/01/07/01.yan-jiu/ben-di-da-jian-chatgpt/ben-di-da-jian-chatgpt/","link":"","permalink":"https://mlwtools.cloudns.biz/2024/01/07/01.yan-jiu/ben-di-da-jian-chatgpt/ben-di-da-jian-chatgpt/","excerpt":"","text":"本地搭建ChatGPT 本地搭建ChatGPT! 无需API、 免翻墙使用纯正OpenAI的全部功能，完全免费！ 下载并安装Docker 【官网下载】 #通用方式安装docker curl -fsSL get.docker.com -o get-docker.sh sudo sh get-docker.sh --mirror Aliyun # 启动docker服务 sudo systemctl start docker # 关闭docker服务 sudo systemctl stop docker # 配置docker开机自启动 sudo systemctl enable docker # 查看docker状态 sudo systemctl status docker # 重启docker服务 sudo systemctl restart docker # 查看安装docker引擎的版本号 docker info 创建docker用户组 sudo groupadd docker 将当前用户加入docker组 sudo usermod -aG docker $USER docker配置阿里云镜像加速 sudo mkdir -p /etc/docker sudo tee /etc/docker/daemon.json &lt;&lt;-'EOF' { \"registry-mirrors\": [\"https://lz2nib3q.mirror.aliyuncs.com\"] } EOF sudo systemctl daemon-reload sudo systemctl restart docker 使用开源项目：潘多拉 (Pandora) 【github】 一键安装命令： docker pull pengzhile/pandora docker run -e PANDORA_CLOUD=cloud -e PANDORA_SERVER=0.0.0.0:8899 -p 8899:8899 -d pengzhile/pandora # 打包镜像 docker save 镜像名 -o 名称.tar # 载入镜像[如有现成的镜像文件可以将打包tar镜像文件导入到本地docker仓库] docker load -i 镜像文件名.tar # 容器打包成新的镜像 docker commit -m \"描述信息\" -a \"作者信息\" （容器id或者名称）打包的镜像名称:标签 获取自己的 Access TOKEN：http://chat.openai.com/api/auth/session 访问本地链接：http://127.0.0.1:8899 即可搞定！","categories":[{"name":"研究","slug":"研究","permalink":"https://mlwtools.cloudns.biz/categories/%E7%A0%94%E7%A9%B6/"}],"tags":[{"name":"ChatGPT","slug":"ChatGPT","permalink":"https://mlwtools.cloudns.biz/tags/ChatGPT/"}]}],"categories":[{"name":"研究","slug":"研究","permalink":"https://mlwtools.cloudns.biz/categories/%E7%A0%94%E7%A9%B6/"},{"name":"工具","slug":"工具","permalink":"https://mlwtools.cloudns.biz/categories/%E5%B7%A5%E5%85%B7/"}],"tags":[{"name":"VPS","slug":"VPS","permalink":"https://mlwtools.cloudns.biz/tags/VPS/"},{"name":"Git","slug":"Git","permalink":"https://mlwtools.cloudns.biz/tags/Git/"},{"name":"Hysteria2","slug":"Hysteria2","permalink":"https://mlwtools.cloudns.biz/tags/Hysteria2/"},{"name":"Hexo","slug":"Hexo","permalink":"https://mlwtools.cloudns.biz/tags/Hexo/"},{"name":"ChatGPT","slug":"ChatGPT","permalink":"https://mlwtools.cloudns.biz/tags/ChatGPT/"}]}